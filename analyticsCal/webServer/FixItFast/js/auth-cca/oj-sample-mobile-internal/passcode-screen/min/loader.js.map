{
  "version": 3,
  "sources": [
    "text!oj-sample-mobile-internal/passcode-screen/passcode-screen-view.html",
    "passcode-screen/resources/nls/passcode-screen-strings.js",
    "ojL10n!oj-sample-mobile-internal/passcode-screen/resources/nls/passcode-screen-strings",
    "passcode-screen/passcode-screen-viewModel.js",
    "text!oj-sample-mobile-internal/passcode-screen/component.json",
    "css!oj-sample-mobile-internal/passcode-screen/passcode-screen-styles",
    "passcode-screen/loader.js",
    "../../../../../../../../../../onLayerEnd0.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA,ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChLA;AACA;AACA;AACA,ACHA;AACA;AACA,ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA",
  "file": "loader.js",
  "sourcesContent": [
    "\ndefine('text!oj-sample-mobile-internal/passcode-screen/passcode-screen-view.html',[],function () { return '<!--\\n  Copyright (c) 2015, 2018, Oracle and/or its affiliates.\\n  The Universal Permissive License (UPL), Version 1.0\\n-->\\n<div class=\"dpls\">\\n  <div class=\"dpls-container\">\\n    <div>\\n      <h1 class=\"dpls-appname dpls-white-text\"><oj-bind-text value=\"[[companyName]]\"></oj-bind-text>\\n        <div><oj-bind-text value=\"[[appName]]\"></oj-bind-text></div>\\n      </h1>\\n    </div>\\n\\n    <div class=\"dpls-passcode-area\">\\n      <div>\\n        <h3 class=\"dpls-white-text\"><oj-bind-text value=\"[[passcodeText]]\"></oj-bind-text></h3>\\n        <h4 class=\"dpls-red-text\"><oj-bind-text value=\"[[errorMsg]]\"></oj-bind-text></h4>\\n      </div>\\n      <div class=\"dpls-passcode-input-area\">\\n        <div class=\"dpls-passcode-input-element\">\\n          <oj-input-password :id=\"[[\\'pwdFld_\\' + $uniqueId]]\" value=\\'{{passcode}}\\' readonly></oj-input-password>\\n        </div>\\n        <div>\\n          <oj-button class=\"dpls-white-text\" chroming=\"half\" on-click=\\'[[submitPin]]\\'>\\n            <span><oj-bind-text value=\"[[goText]]\"></oj-bind-text></span>\\n          </oj-button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\"dpls-keypad dpls-white-text\">\\n      <div class=\"dpls-keypad-row\">\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.one]]\"></oj-bind-text>\\n        </div>\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.two]]\"></oj-bind-text>\\n        </div>\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.three]]\"></oj-bind-text>\\n        </div>\\n      </div>\\n      <div class=\"dpls-keypad-row\">\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.four]]\"></oj-bind-text>\\n        </div>\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.five]]\"></oj-bind-text>\\n        </div>\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.six]]\"></oj-bind-text>\\n        </div>\\n      </div>\\n      <div class=\"dpls-keypad-row\">\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.seven]]\"></oj-bind-text>\\n        </div>\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.eight]]\"></oj-bind-text>\\n        </div>\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.nine]]\"></oj-bind-text>\\n        </div>\\n      </div>\\n      <div class=\"dpls-keypad-row\">\\n        <div class=\"dpls-dummy-btn\"></div>\\n        <div class=\"dpls-round-btn\" on-click=\\'[[keypadButtonClick]]\\'>\\n          <oj-bind-text value=\"[[translations.zero]]\"></oj-bind-text>\\n        </div>\\n        <div class=\"dpls-delete-btn-container\">\\n          <oj-button class=\"dpls-white-btn\" chroming=\"half\" on-click=\\'[[deleteChar]]\\'>\\n            <span><oj-bind-text value=\"[[deleteText]]\"></oj-bind-text></span>\\n          </oj-button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n",
    "/**\n  Copyright (c) 2015, 2018, Oracle and/or its affiliates.\n  The Universal Permissive License (UPL), Version 1.0\n*/\ndefine('oj-sample-mobile-internal/passcode-screen/resources/nls/passcode-screen-strings',{\n  \"root\": true\n});\n\n",
    "\n",
    "/**\n * Copyright (c) 2015, 2018, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n */\n'use strict';\ndefine(\n    'oj-sample-mobile-internal/passcode-screen/passcode-screen-viewModel',['ojs/ojtranslation', 'knockout',\n     'ojL10n!./resources/nls/passcode-screen-strings',\n     'ojs/ojbutton', 'ojs/ojinputtext'],\n  function (Translations, ko, nls) {\n    function PasscodeScreenModel(context) {\n      this.context = context;\n      this.composite = context.element;\n      this.translations = nls.ojSampleMobilePasscodeScreen;\n      this.initObservables();\n    };\n\n    PasscodeScreenModel.StringProperties = ['appName', 'companyName', 'passcodeText', 'goText', 'deleteText'];\n\n    /**\n     * Method to init observables needed by component.\n     * @internal\n     */\n    PasscodeScreenModel.prototype.initObservables = function() {\n      this.passcode = ko.observable('');\n      this.errorMsg = ko.observable();\n      this.initComponentProperties();\n    };\n\n    /**\n     * Method to init component properties.\n     * @internal\n     */\n    PasscodeScreenModel.prototype.initComponentProperties = function() {\n      PasscodeScreenModel.StringProperties.forEach(function(el) {\n        this.initStringProperty(el);\n      }.bind(this));\n\n      this.validatePasscodeLength = ko.observable(false);\n      this.minLen = ko.observable(4);\n      this.maxLen = ko.observable(12);\n\n      if (this.context.properties.minPasscodeLength)\n        this.minLen(this.context.properties.minPasscodeLength);\n      if (this.context.properties.maxPasscodeLength)\n        this.maxLen(this.context.properties.maxPasscodeLength);\n      if (this.context.properties.validatePasscodeLength)\n        this.validatePasscodeLength(true);\n    };\n\n    /**\n     * Handle property changes done from app.\n     * @param {object} context \n     */\n    PasscodeScreenModel.prototype.propertyChanged = function(context) {\n      for (var index in PasscodeScreenModel.StringProperties)\n        if (this.handleStringChanged(context, PasscodeScreenModel.StringProperties[index]))\n          return;\n\n      if (context.property === 'validatePasscodeLength' && context.value !== this.validatePasscodeLength()) {\n        this.validatePasscodeLength(context.value);\n        return;\n      }\n\n      if (context.property === 'minPasscodeLength' && context.value !== this.minLen()) {\n        this.minLen(context.value);\n        return;\n      } \n      \n      if (context.property === 'maxPasscodeLength' && context.value !== this.maxLen())\n        this.maxLen(context.value);\n    };\n\n    /**\n     * Handle component configured property changed for string types.\n     * @param {object} context \n     * @param {string} key \n     */\n    PasscodeScreenModel.prototype.handleStringChanged = function(context, key) {\n      if (context.property !== key || context.value === this[key]()) \n        return false;\n\n      if (context.value === undefined)\n        this[key](this.defaultString(key));\n      else \n        this[key](context.value);\n\n      return true;\n    };\n\n    /**\n     * Method to fetch and set display string passed in component properties\n     * and default to translated strings if missing.\n     * @param {String} key \n     * @internal\n     */\n    PasscodeScreenModel.prototype.initStringProperty = function(key) {\n      var displayStr;\n      if (this.context.properties[key])\n        displayStr = this.context.properties[key];\n      else\n        displayStr = this.defaultString(key);\n      this[key] = ko.observable(displayStr);\n    };\n\n    /**\n     * Returns default string from translations for a key provided.\n     * @param {string} key \n     */\n    PasscodeScreenModel.prototype.defaultString = function(key) {\n      return this.translations['default' + key.charAt(0).toUpperCase() + key.slice(1)];\n    };\n\n    // UI event handlers.\n    /**\n     * Handler for keypad buttons \n     * @param {object} event \n     * @param {object} vm \n     * @internal\n     */\n    PasscodeScreenModel.prototype.keypadButtonClick = function(event, vm) {\n      // Note: event.srcElement.innerText will change with translation.\n      vm.passcode(vm.passcode() + event.srcElement.innerText);\n    };\n\n    /**\n     * Handler for delete button on keypad\n     * @param {object} event \n     * @param {object} vm \n     * @internal\n     */\n    PasscodeScreenModel.prototype.deleteChar = function(event, vm) {\n      vm.passcode(vm.passcode().slice(0, -1));\n    };\n\n    /**\n     * Handler for submit button on the keypad\n     * @param {object} event \n     * @param {object} vm \n     * @internal\n     */\n    PasscodeScreenModel.prototype.submitPin = function(event, vm) {\n      var passLen = vm.passcode().length;\n      if (vm.validatePasscodeLength() && (passLen < vm.minLen() || passLen > vm.maxLen())) {\n        vm.errorMsg(Translations.applyParameters(vm.translations.lengthValidationError, [vm.minLen(), vm.maxLen()]));\n        return;\n      }\n\n      vm.errorMsg('');\n      vm.composite.dispatchEvent(new CustomEvent('ojDone', {bubbles: true, details: {}}));\n    };\n\n    // Public methods.\n    /**\n     * Public method to get passcode entered by user.\n     */\n    PasscodeScreenModel.prototype.getPasscode = function() {\n      return this.passcode();\n    };\n\n    /**\n     * Public method to clear passcode.\n     */\n    PasscodeScreenModel.prototype.clearPasscode = function() {\n      this.passcode('');\n    };\n\n    /**\n     * Public method to set error message on the keypad.\n     */\n    PasscodeScreenModel.prototype.setError = function(error) {\n      this.errorMsg(error);\n    };\n\n    return PasscodeScreenModel;\n});\n",
    "\ndefine('text!oj-sample-mobile-internal/passcode-screen/component.json',[],function () { return '{\\n  \"name\": \"passcode-screen\",\\n  \"pack\":\"oj-sample-mobile-internal\",\\n  \"displayName\": \"Passcode based login screen\",\\n  \"description\": \"Login screen for collecting passcode from user.\",\\n  \"version\": \"0.0.5\",\\n  \"jetVersion\": \"^6.0.0\",\\n  \"properties\": {\\n    \"appName\": {\\n      \"description\": \"Name of the app to be displayed on the login page. Has default value if not configured.\",\\n      \"type\": \"string\"\\n    },\\n    \"companyName\": {\\n      \"description\": \"Name of the company to be displayed on the login page. Has default value if not configured.\",\\n      \"type\": \"string\"\\n    },\\n    \"passcodeText\": {\\n      \"description\": \"Text to be used for passcode prompt. Has default value if not configured.\",\\n      \"type\": \"string\"\\n    },\\n    \"goText\": {\\n      \"description\": \"Text to be used for submit button. Has default value if not configured.\",\\n      \"type\": \"string\"\\n    },\\n    \"deleteText\": {\\n      \"description\": \"Text to be used for delete button. Has default value if not configured.\",\\n      \"type\": \"string\"\\n    },\\n    \"validatePasscodeLength\": {\\n      \"description\": \"If passcode length validation should be triggered or not. Defaults to false.\",\\n      \"type\": \"boolean\"\\n    },\\n    \"maxPasscodeLength\": {\\n      \"description\": \"Maximum length of passcode allowed, defaults to 4.\",\\n      \"type\": \"number\"\\n    },\\n    \"minPasscodeLength\": {\\n      \"description\": \"Minimum length of passcode allowed, defaults to 12.\",\\n      \"type\": \"number\"\\n    }\\n  },\\n  \"methods\": {\\n    \"getPasscode\": {\\n      \"description\": \"Returns the passcode captured from user.\"\\n    },\\n    \"clearPasscode\": {\\n      \"description\": \"Clears the passcode currently held.\"\\n    },\\n    \"setError\": {\\n      \"description\": \"Sets error message to be shown to the user.\",\\n      \"params\" : [\\n        {\\n          \"description\":\"Error message to use.\",\\n          \"name\" : \"error\",\\n          \"type\": \"string\"\\n        }\\n      ]\\n    }\\n  },\\n  \"events\": {\\n    \"ojDone\": {\\n      \"description\": \"Fired when user clicks on go button to submit the passcode.\",\\n      \"bubbles\": true\\n    }\\n  },\\n  \"extension\": {\\n    \"catalog\": {\\n      \"category\": \"Mobile Components\",\\n      \"tags\": [\\n        \"IDM\",\\n        \"authentication\",\\n        \"mobile\",\\n        \"Form Factor: Tablet\",\\n        \"Form Factor: mobile\"\\n      ]\\n    }\\n  }\\n}';});\n\n",
    "\ndefine('css!oj-sample-mobile-internal/passcode-screen/passcode-screen-styles',[],function(){});\n",
    "/**\n  Copyright (c) 2015, 2018, Oracle and/or its affiliates.\n  The Universal Permissive License (UPL), Version 1.0\n*/\ndefine('oj-sample-mobile-internal/passcode-screen/loader',['ojs/ojcomposite', 'text!./passcode-screen-view.html',\n        './passcode-screen-viewModel', 'text!./component.json',\n        'css!./passcode-screen-styles'],\n  function(Composite, view, viewModel, metadata) {\n    Composite.register('oj-sample-mobile-internal-passcode-screen', {\n      view: view, \n      viewModel: viewModel, \n      metadata: JSON.parse(metadata)\n    });\n  }\n);\n",
    "\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('oj-sample-mobile-internal-passcode-screen * {\\n  box-sizing: border-box;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls {\\n  background-color:#3C72CE;\\n  width: 100%;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-container {\\n  width:390px; /* Fix the width for the center passcode content */\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-appname {\\n  font-size: 3rem;\\n  text-align:center;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-appname > div {\\n  font-weight: 400;\\n  padding-top: 4px;\\n\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-passcode-area {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  text-align: center;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-passcode-input-area {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  width: 100%;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-passcode-input-element {\\n  width: 75%;\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-passcode-input-element .oj-inputpassword.oj-read-only .oj-inputpassword-input {\\n  letter-spacing: 20px;\\n  color: white;\\n  font-size: 1.5rem;\\n  text-align:center;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-keypad {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-keypad-row {\\n  display: flex;\\n  justify-content: space-around;\\n  flex-wrap: nowrap;\\n  width: 100%;\\n  margin: 10px;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-dummy-btn {\\n  height: 80px;\\n  width: 70px; /* Find out why this has to be 10 px less */\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-round-btn {\\n  border: solid 1px;\\n  border-color: #82B9E7;\\n  border-radius: 50%;\\n  font-size: 2.5rem;\\n  cursor:default;\\n  height: 80px;\\n  width: 80px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-round-btn:hover {\\n  background-color:#76b8e1;\\n  border-color: white;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-delete-btn-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-white-text {\\n  color:white;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-red-text {\\n  color:#cc0000;\\n}\\n\\noj-sample-mobile-internal-passcode-screen .dpls-white-text .oj-button-button > .oj-button-label > .oj-button-text {\\n  color:white;\\n}\\n\\n\\n');\n"
  ]
}